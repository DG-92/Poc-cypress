{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-23T22:25:03.043Z",
    "end": "2025-10-23T22:25:04.623Z",
    "duration": 1580,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7a1f78cd-483b-4722-9890-ecee19514a94",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\api.cy.js",
      "file": "cypress\\e2e\\api\\api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "74870ee0-5f4d-427a-9f7a-e7634ea266e3",
          "title": "🐾 Testes de API - Dog API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c4c065ac-d092-4f7c-b863-90ea1bab04a6",
              "title": "GET /breeds/list/all",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar a lista de raças com status 200 e formato correto",
                  "fullTitle": "🐾 Testes de API - Dog API GET /breeds/list/all Deve retornar a lista de raças com status 200 e formato correto",
                  "timedOut": null,
                  "duration": 798,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request(`${BASE_API}/breeds/list/all`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property(\"message\");\n  expect(response.body.message).to.be.an(\"object\");\n  expect(response.body).to.have.property(\"status\", \"success\");\n  // Verifica se há pelo menos uma raça\n  const breeds = Object.keys(response.body.message);\n  expect(breeds.length).to.be.greaterThan(0);\n});",
                  "err": {},
                  "uuid": "66975a76-96de-4661-aaf6-63aa8925e68d",
                  "parentUUID": "c4c065ac-d092-4f7c-b863-90ea1bab04a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "66975a76-96de-4661-aaf6-63aa8925e68d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 798,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e2edded2-5150-4d1e-9d10-09b685801b3f",
              "title": "GET /breed/{breed}/images",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar imagens da raça hound com status 200",
                  "fullTitle": "🐾 Testes de API - Dog API GET /breed/{breed}/images Deve retornar imagens da raça hound com status 200",
                  "timedOut": null,
                  "duration": 255,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request(`${BASE_API}/breed/${breed}/images`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property(\"message\");\n  expect(response.body.message).to.be.an(\"array\");\n  expect(response.body.message[0]).to.match(/^https:\\/\\/images\\.dog\\.ceo/);\n  expect(response.body).to.have.property(\"status\", \"success\");\n});",
                  "err": {},
                  "uuid": "19b359dc-41ea-49cd-87c9-fd94c90ff410",
                  "parentUUID": "e2edded2-5150-4d1e-9d10-09b685801b3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve retornar erro 404 para uma raça inexistente",
                  "fullTitle": "🐾 Testes de API - Dog API GET /breed/{breed}/images Deve retornar erro 404 para uma raça inexistente",
                  "timedOut": null,
                  "duration": 226,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  url: `${BASE_API}/breed/raçaInexistente/images`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
                  "err": {},
                  "uuid": "30e15937-8d84-4424-ae9d-3cfee3500792",
                  "parentUUID": "e2edded2-5150-4d1e-9d10-09b685801b3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19b359dc-41ea-49cd-87c9-fd94c90ff410",
                "30e15937-8d84-4424-ae9d-3cfee3500792"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 481,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "800fa042-e4a7-4c4c-ae84-1e7d06b63706",
              "title": "GET /breeds/image/random",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar uma imagem aleatória de qualquer raça",
                  "fullTitle": "🐾 Testes de API - Dog API GET /breeds/image/random Deve retornar uma imagem aleatória de qualquer raça",
                  "timedOut": null,
                  "duration": 231,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request(`${BASE_API}/breeds/image/random`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.message).to.be.a(\"string\");\n  expect(response.body.message).to.match(/^https:\\/\\/images\\.dog\\.ceo/);\n  expect(response.body.status).to.eq(\"success\");\n});",
                  "err": {},
                  "uuid": "ff80ee21-6e70-4d88-96e6-a07a4dcc8d84",
                  "parentUUID": "800fa042-e4a7-4c4c-ae84-1e7d06b63706",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff80ee21-6e70-4d88-96e6-a07a4dcc8d84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 231,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}